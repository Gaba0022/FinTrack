[
  {
    "ContainingType": "Backend.Presentation.Controllers.CryptoController",
    "Method": "Create",
    "RelativePath": "api/Crypto",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.Crypto.CreateCryptoDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Crypto.ReadCryptoDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.CryptoController",
    "Method": "GetById",
    "RelativePath": "api/Crypto/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Crypto.ReadCryptoDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.CryptoController",
    "Method": "Delete",
    "RelativePath": "api/Crypto/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.CryptoController",
    "Method": "GetBySymbol",
    "RelativePath": "api/Crypto/symbol/{symbol}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "symbol",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Crypto.ReadCryptoDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "Create",
    "RelativePath": "api/PriceAlert",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.PriceAlert.CreatePriceAlertDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceAlert.ReadPriceAlertDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "GetById",
    "RelativePath": "api/PriceAlert/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceAlert.ReadPriceAlertDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "Update",
    "RelativePath": "api/PriceAlert/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.PriceAlert.UpdatePriceAlertDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceAlert.ReadPriceAlertDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "Delete",
    "RelativePath": "api/PriceAlert/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "GetByCoinId",
    "RelativePath": "api/PriceAlert/coin/{coinId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "coinId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Backend.Application.DTOs.PriceAlert.ReadPriceAlertDTO, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceAlertController",
    "Method": "GetByUserId",
    "RelativePath": "api/PriceAlert/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Backend.Application.DTOs.PriceAlert.ReadPriceAlertDTO, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceHistoryController",
    "Method": "Create",
    "RelativePath": "api/PriceHistory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.PriceHistory.CreatePriceHistoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceHistory.ReadPriceHistoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceHistoryController",
    "Method": "GetById",
    "RelativePath": "api/PriceHistory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceHistory.ReadPriceHistoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceHistoryController",
    "Method": "GetLatestByCrypto",
    "RelativePath": "api/PriceHistory/latest/{cryptoCoinId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptoCoinId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.PriceHistory.ReadPriceHistoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Backend.Presentation.Controllers.PriceHistoryController",
    "Method": "GetAllByCrypto",
    "RelativePath": "api/PriceHistory/range/{cryptoCoinId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptoCoinId",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "from",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "to",
        "Type": "System.DateTime",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Backend.Application.DTOs.PriceHistory.ReadPriceHistoryDTO, Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.Users.CreateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 201
      }
    ]
  },
  {
    "ContainingType": "UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.Users.UpdateUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Users.ReadUserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UserController",
    "Method": "GetByEmail",
    "RelativePath": "api/User/by-email/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Users.ReadUserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserController",
    "Method": "GetById",
    "RelativePath": "api/User/by-id/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Backend.Application.DTOs.Users.ReadUserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Backend.Application.DTOs.Users.LoginUserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]